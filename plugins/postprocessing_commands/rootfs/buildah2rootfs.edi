#!/bin/bash

set -o errexit
set -o nounset
set -o pipefail

WORKDIR="{{ edi_work_directory }}"
CONTAINER_NAME="{{ edi_project_container }}"
ROOTFS_ARCHIVE="{{ pp_rootfs_archive }}"
LOG_LEVEL="{{ edi_log_level }}"

print_error()
{
    local MESSAGE="${1}"
    >&2 echo -e "\033[91mError: ${MESSAGE}\033[0m"
}

print_error_and_exit()
{
    local MESSAGE="${1}"
    print_error "${MESSAGE}"
    exit 1
}

unexpected_exit()
{
    local TEMPDIR="${1}"
    print_error "Going to clean up after abnormal script termination."
    clean_up "${TEMPDIR}"
    trap - EXIT
    print_error_and_exit "Abnormal script termination."
}

clean_up()
{
    local TEMPDIR="${1}"
    rm -rf "${TEMPDIR}"
}

if [ "${LOG_LEVEL}" == "DEBUG" ]; then
    set -x
fi

if [[ ${EUID} -eq 0 ]]; then
   print_error_and_exit "This script must not be run as root."
fi

if ! buildah inspect "${CONTAINER_NAME}" > /dev/null 2>&1; then
   print_error_and_exit "The container ${CONTAINER_NAME} does not exist."
fi

TEMPDIR="$(mktemp -p ${WORKDIR} -d -t .tmp.XXXXXXXX)"

trap "unexpected_exit ${TEMPDIR}" EXIT

TEMP_ARCHIVE="${TEMPDIR}/archive.tar"
NESTED_COMMAND="tar --numeric-owner -C "'"${container_root}"'" -acf ${TEMP_ARCHIVE} ."
buildah unshare --mount container_root="${CONTAINER_NAME}" -- bash -c "${NESTED_COMMAND}"

mv "${TEMP_ARCHIVE}" "${ROOTFS_ARCHIVE}"

clean_up "${TEMPDIR}"

trap - EXIT

