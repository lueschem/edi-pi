#!/bin/bash

# Copyright (C) 2023 Matthias Luescher
#
# Authors:
#  Matthias Luescher
#
# Acknowledgement:
#  This script is based on the ideas of various open source developers.
#
# This file is part of the edi project configuration.
#
# This script is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This script is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with the edi project configuration.  If not, see <http://www.gnu.org/licenses/>.

# ----------------------------------------------------------------------------
# changes the hostname on first boot
# ----------------------------------------------------------------------------

set -o nounset
set -o errexit
set -o pipefail

print_and_exit()
{
    local TYPE=$1
    local MESSAGE=$2
    trap - EXIT
    if [ "${TYPE}" == "ERROR" ] ; then
        >&2 echo "error: ${MESSAGE}"
        exit 1
    else
        echo "${MESSAGE}"
        exit 0
    fi
}

abnormal_termination()
{
    print_and_exit "ERROR" "failed to set hostname due to abnormal script termination"
}

trap "abnormal_termination" EXIT

echo "going to adjust hostname"

IDENTITY_SCRIPT="/usr/share/mender/identity/mender-device-identity"

if [ ! -x "${IDENTITY_SCRIPT}" ] ; then
    print_and_exit "ERROR" "identity script does either not exist or is not executable"
fi

if systemd-detect-virt --container > /dev/null ; then
    print_and_exit "INFO" "detected container virtualization - not going to adjust hostname"
fi

if [[ $EUID -ne 0 ]]; then
   print_and_exit "ERROR" "use root user to execute this script"
fi

OLD_HOSTNAME=$(cat /etc/hostname)
HOSTNAME_SUFFIX="$("${IDENTITY_SCRIPT}" | cut -d= -f2 | sed 's/://g')"
# take care of idempotency by not adding the suffix twice
NEW_HOSTNAME="${OLD_HOSTNAME%-${HOSTNAME_SUFFIX}}-${HOSTNAME_SUFFIX}"

# static hostname
echo "${NEW_HOSTNAME}" > /etc/hostname
# transient hostname
hostname "${NEW_HOSTNAME}"
sed -i "s/^127.0.1.1.*/127.0.1.1   ${NEW_HOSTNAME}/" /etc/hosts

print_and_exit "INFO" "hostname successfully adjusted"
